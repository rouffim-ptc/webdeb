#
# WebDeb - Copyright (C) <2014-2019> <Université catholique de Louvain (UCL), Belgique ; Université de Namur (UNamur), Belgique>
#
# List of the contributors to the development of WebDeb: see AUTHORS file.
# Description and complete License: see LICENSE file.
#
# This program (WebDeb) is free software:
# you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program (see COPYING file).
# If not, see <http://www.gnu.org/licenses/>.
#

#
# This is the main configuration file for the webdeb application
#
# typical command is: (front tilde '~' is meant to use auto-reload feature)
#     ~run -Dhttp.port=disabled -Dhttps.port=9443 -Dplay.server.https.keyStore.path=conf/generated.keystore
#
# When the system is launched, to ensure proper starting, the main (/) page must be first loaded to have all
# injected resources properly created and loaded (otherwise bad things mahttps://localhost:9443/entry/debate?debateId=-1y happen because of improper loading
#


# Secret key
# ~~~~~

play.evolutions.enabled = false

# error handling
play.http.errorHandler = "be.webdeb.presentation.web.controllers.ErrorHandler"

# disable db evolutions
play.evolutions {
  # You can disable evolutions for a specific datasource if necessary
  db.default.autoApply = false
}

# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
ebean.default = "be.webdeb.infra.persistence.model.*"

# injector modules
play.modules.enabled += be.objectify.deadbolt.java.DeadboltModule
play.modules.enabled += be.webdeb.presentation.web.controllers.WebdebModule
play.modules.enabled += be.webdeb.core.CoreModule
play.modules.enabled += be.webdeb.infra.InfrastructureModule
play.modules.enabled += be.webdeb.application.ApplicationModule
play.modules.enabled += be.webdeb.util.UtilModule

# deadbolt (permissions) tweaks
deadbolt.java.cache-user = true

# supported languages
play.i18n.langs = ["fr", "en", "nl"]

# akka agent conf
akka.actor.default-dispatcher.fork-join-executor.pool-size-max = 64
akka.actor.debug.receive = on

# secured session
play.http.session.secure = true

# post size
play.http.parser.maxMemoryBuffer = 5120K
play.http.parser.maxDiskBuffer = 51200K

# citation size for text previews (in number of char)
text.citation.long = 800
text.citation.small = 400

# standard form size
argument.standard.size.warning = 150
argument.standard.size.danger = 300

# popular and latest contributions
popular.contributions.size = 8
latest.contributions.size = 8

# min contribution searh results
search.contribution.min=0
# max contribution searh results
search.contribution.max=100

include "webdeb"

include "mail"

include "nlp"

include "geonames"

include "cachekeys"

include "csv"

# some perf-related confs (ongoing job...)
akka {
  actor {
    default-dispatcher {
      fork-join-executor {
        parallelism-factor = 2.0
        parallelism-max = 24
        task-peeking-mode = FIFO
      }
    }
  }
}

play.ws.timeout.connection = 500000
play.ws.timeout.request = 500000
play.ws.timeout.idle = 500000

# googlebot, bingbot, DuckDuckBot, yandexbot (russia), exabot (france), yahoo slurp, facebook, amazon
# Baidu (chinese google), sogou spider (chinese that even does not care about robots.txt)
known.bots = ["bot", "slurp", "baiduspider", "sogou", "facebookexternalhit", "ia_archiver"]
